openapi: 3.0.0
servers:
  - url: 'http://api.raonix.com/nemoahnApi/1.0.0'
info:
  description: This is NemoAhn API.
  version: 1.0.0
  title: NemoAhn
  contact:
    name: NemoAhn Thermostat API
    url: 'http://www.raonix.com'
    email: raonix@raonix.co.kr
paths:
  /devices:
    get:
      tags: 
        - Device
      summary: 디바이스 정보
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
  /devices/{id}:
    get:
      tags:
        - Device
      summary: 디바이스 상태 요청
      parameters:
        - $ref: '#/components/parameters/deviceIdParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceState'
    put:
      tags:
        - Device
      summary: 디바이스 상태 변경
      parameters:
        - $ref: '#/components/parameters/deviceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceState'
  /devices/{id}/database:
    get:
      tags:
        - Device
      summary: 디바이스 상태 DB 요청
      parameters:
        - $ref: '#/components/parameters/deviceIdParam'
        - $ref: '#/components/parameters/startParm'
        - $ref: '#/components/parameters/endParm'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDbState'
components:
  parameters:
    deviceIdParam:
      name: id
      in: path
      required: true
      description: Device'Id
      schema:
        type: string
    startParm:
      name: start
      in: query
      description: The start time for the query
      schema:
        type: integer
        format: int64
    endParm:
      name: end
      in: query
      description: The end time for the query
      schema:
        type: integer
        format: int64
  schemas:
    Device:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        traits:
          type: array
          items:
            type: string
        name:
          type: object
          properties:
            defaultName:
              type: string
            name:
              type: string
        willReportState:
          type: boolean
        deviceInfo:
          type: object
          properties:
            manufacturer:
              type: string
            model:
              type: string
            hwVersion:
              type: string
            swVersion:
              type: string
        attributes:
          anyOf:
            - $ref: '#/components/schemas/TemperatureSettingAttributes'
            - $ref: '#/components/schemas/ModesAttribues'
            - $ref: '#/components/schemas/TogglesAttribues'
        customData:
          type: object
    DeviceState:
      allOf:
        - $ref: '#/components/schemas/OnOffStates'
        - $ref: '#/components/schemas/BrightnessStates'
        - $ref: '#/components/schemas/TemperatureSettingStates'
        - $ref: '#/components/schemas/ModesStates'
        - $ref: '#/components/schemas/TogglesStates'
        - type: object
          properties:
            online:
              type: boolean
    DeviceCommand:
      allOf:
        - $ref: '#/components/schemas/OnOffCommands'
        - $ref: '#/components/schemas/BrightnessCommands'
        - $ref: '#/components/schemas/TemperatureSettingCommands'
        - $ref: '#/components/schemas/ModesCommands'
        - $ref: '#/components/schemas/TogglesCommands'
    DeviceDbState:
      type: object
      properties:
        nmae:
          type: string
          description: Trait에서 정의된 State의 key 이름
        max:
          type: number
        min:
          type: number
        avr:
          type: number
        datas:
          type: array
          items:
            type: array
            items:
              allOf:
                - type: integer
                  format: int64
                - type: number
# TemperatureSetting Trait
    TemperatureSettingAttributes:
      type: object
      properties:
        availableThermostatModes:
          type: array
          items:
            type: string
        thermostatTemperatureUnit:
          type: string
          enum: [C, F]
    TemperatureSettingStates:
      type: object
      properties:
        thermostatMode:
          type: string
          description: Current mode of the device, with the same values as the attribute
        thermostatTemperatureSetpoint:
          type: number
        thermostatTemperatureAmbient:
          type: number
        thermostatTemperatureSetpointHigh:
          type: number
        thermostatTemperatureSetpointLow:
          type: number
        thermostatHumidityAmbient:
          type: number
    TemperatureSettingCommands:
      type: object
      properties:
        thermostatMode:
          type: string
          description: Current mode of the device, with the same values as the attribute
        thermostatTemperatureSetpoint:
          type: number
        thermostatTemperatureSetpointHigh:
          type: number
        thermostatTemperatureSetpointLow:
          type: number
# OnOff Trait
# OnOffAttribures: None
    OnOffStates:
      type: object
      properties:
        on:
          type: boolean
    OnOffCommands:
      type: object
      properties:
        on:
          type: boolean
# Brightness Trait
# brightnessAttribures: None
    BrightnessStates:
      type: object
      properties:
        brightness:
          type: integer
          minimum: 0
          maximum: 100
    BrightnessCommands:
      type: object
      properties:
        brightness:
          type: integer
          minimum: 0
          maximum: 100
# Modes Trait
    ModesAttribues:
      type: object
      properties:
        availableModes:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              settings:
                type: array
                items:
                  type: string
        ordered:
          type: boolean
    ModesStates:
      type: object
      properties:
        currentModeSettings:
          type: object
          description: ModesAttribues에서 정의된 name, setting의 object로 구성
          example:
            { "load" : "high", "drytype" : "permpress" }
    ModesCommands:
      type: object
      properties:
        updateModeSettings:
          type: object
          description: ModesAttribues에서 정의된 name, setting의 object로 구성
          example:
            { "load" : "high"} 
  # Toggles Trait
    TogglesAttribues:
      type: object
      properties:
        availableToggles:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
    TogglesStates:
      type: object
      properties:
        currentToggleSettings:
          type: object
          description: TogglesAttribues 정의된 name, boolean object로 구성
          example:
            { "schedule" : true, "outdoor" : false }
    TogglesCommands:
      type: object
      properties:
        updateToggleSettings:
          type: object
          description: ModesAttribues에서 정의된 name, setting의 object로 구성
          example:
            { "schedule" : false } 
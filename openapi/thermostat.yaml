openapi: 3.0.0
servers:
  - url: 'http://api.raonix.com/nemoahnApi/1.0.0'
info:
  description: This is NemoAhn API.
  version: 1.0.0
  title: NemoAhn
  contact:
    name: NemoAhn Thermostat API
    url: 'http://www.raonix.com'
    email: raonix@raonix.co.kr
paths:
  '/thermostats/{deviceId}':
    get:
      tags:
        - thermostat
      summary: 상태 조회
      parameters:
        - $ref: '#/components/parameters/deviceIdParam'
        - $ref: '#/components/parameters/startParm'
        - $ref: '#/components/parameters/endParm'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  mode:
                    $ref: '#/components/schemas/StateModel'
                  currentTemperature:
                    $ref: '#/components/schemas/StateModel'
                  settingTemperature:
                    $ref: '#/components/schemas/StateModel'
                  heatting:
                    $ref: '#/components/schemas/StateModel'
              examples:
                currentTemperature:
                  value:
                    max: 32
                    min: 15.5
                    avr: 23
                    datas:
                      - - 14141234134123
                        - 32
                      - - 14321341234234
                        - 15.5
                      - - 14213412342134
                        - 20
                settingTemperature:
                  value:
                    max: 32
                    min: 15.5
                    avr: 23
                    datas:
                      - - 14141234134123
                        - 32
                      - - 14321341234234
                        - 15.5
                      - - 14213412342134
                        - 20
                heatting:
                  value:
                    max: 1
                    min: 0
                    avr: 0.7
                    datas:
                      - - 14141234134123
                        - 32
                      - - 14321341234234
                        - 15.5
                      - - 14213412342134
                        - 20
        '400':
          description: Invalid Device Id supplied
        '404':
          description: Thermostat not found
    put:
      tags:
        - thermostat
      summary: 상태 변경
      parameters:
        - $ref: '#/components/parameters/deviceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlModel'
      responses:
        '200':
          description: Update(control) device state
  '/thermostats/{deviceId}/settingTemperature':
    get:
      tags:
        - thermostat
      summary: 온도설정값 조회
      parameters:
        - $ref: '#/components/parameters/deviceIdParam'
        - $ref: '#/components/parameters/startParm'
        - $ref: '#/components/parameters/endParm'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateModel'
              examples:
                response:
                  value:
                    max: 32
                    min: 15.5
                    avr: 23
                    datas:
                      - - 14141234134123
                        - 32
                      - - 14321341234234
                        - 15.5
                      - - 14213412342134
                        - 20
        '400':
          description: Invalid ID supplied
        '404':
          description: Thermostat not found
  '/thermostats/{deviceId}/currentTemperature':
    get:
      tags:
        - thermostat
      summary: 현재온도값 조회
      parameters:
        - $ref: '#/components/parameters/deviceIdParam'
        - $ref: '#/components/parameters/startParm'
        - $ref: '#/components/parameters/endParm'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateModel'
        '400':
          description: Invalid ID supplied
        '404':
          description: Thermostat not found
  '/thermostats/{deviceId}/heating':
    get:
      tags:
        - thermostat
      summary: 보일러 동작 상태 조회
      parameters:
        - $ref: '#/components/parameters/deviceIdParam'
        - $ref: '#/components/parameters/startParm'
        - $ref: '#/components/parameters/endParm'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateModel'
              examples:
                response:
                  value:
                    max: 1
                    min: 0
                    avr: 0.56
                    datas:
                      - - 14141234134123
                        - 1
                      - - 14321341234234
                        - 1
                      - - 14213412342134
                        - 0
        '400':
          description: Invalid ID supplied
        '404':
          description: Thermostat not found
components:
  parameters:
    deviceIdParam:
      name: deviceId
      in: path
      required: true
      description: Device'Id
      schema:
        type: string
    startParm:
      name: start
      in: query
      description: The start time for the query
      schema:
        type: integer
        format: int64
    endParm:
      name: end
      in: query
      description: The end time for the query
      schema:
        type: integer
        format: int64
  schemas:
    StateModel:
      type: object
      properties:
        max:
          type: number
        min:
          type: number
        avr:
          type: number
        datas:
          type: array
          items:
            type: array
            items:
              anyOf:
                - type: integer
                - type: number
    ControlModel:
      properties:
        settingTemperature:
          type: number
        mode:
          type: string
    AttributeModel:
      properties:
        availableModes:
          type: array
          items:
            type: string
            example: ["off", "on", "cool"]
        temperatureUnit:
          type: string
          enum: [C, F]
        settingTemperatureHigh:
          type: number
        settingTemperatureLow:
          type: number
        
      

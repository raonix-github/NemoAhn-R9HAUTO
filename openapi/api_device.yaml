openapi: 3.0.0
servers:
  - url: 'http://api.raonix.com/nemoahnApi/1.0.0'
info:
  description: This is NemoAhn API.
  version: 1.0.0
  title: NemoAhn
  contact:
    name: NemoAhn Thermostat API
    url: 'http://www.raonix.com'
    email: raonix@raonix.co.kr
paths:
  '/devices':
    get:
      tags:
        - Device
      summary: 디바이스 목록 조회
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'Device.model.yaml#/DeviceAttribute'
  '/devices/{id}':
    get:
      tags:
        - Device
      summary: 디바이스 상태 요청
      parameters:
        - $ref: '#/components/parameters/deviceIdParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Device.model.yaml#/DeviceState'
    put:
      tags:
        - Device
      summary: 디바이스 상태 변경
      parameters:
        - $ref: '#/components/parameters/deviceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'Device.model.yaml#/DeviceCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Device.model.yaml#/DeviceState'
  '/devices/{id}/database':
    get:
      tags:
        - Device
      summary: 디바이스 상태 DB 요청
      parameters:
        - $ref: '#/components/parameters/deviceIdParam'
        - $ref: '#/components/parameters/startParam'
        - $ref: '#/components/parameters/endParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Device.model.yaml#/DeviceDbState'
components:
  parameters:
    deviceIdParam:
      name: id
      in: path
      required: true
      description: Device'Id
      schema:
        type: string
    userIdParam:
      name: userId
      in: query
      description: 사용자 ID
      schema:
        type: string
    startParam:
      name: start
      in: query
      description: The start time for the query
      schema:
        type: integer
        format: int64
    endParam:
      name: end
      in: query
      description: The end time for the query
      schema:
        type: integer
        format: int64
    offsetParam:
      name: offset
      in: query
      description: Number of items to skip before returning the results.
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
    limitParam:
      name: limit
      in: query
      description: Maximum number of items to return.
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 20
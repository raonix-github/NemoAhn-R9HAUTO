openapi: 3.0.0
servers:
  - url: 'http://api.raonix.com/nemoahnApi/1.0.0'
info:
  description: This is NemoAhn API.
  version: 1.0.0
  title: NemoAhn
  contact:
    name: NemoAhn Thermostat API
    url: 'http://www.raonix.com'
    email: raonix@raonix.co.kr
paths:
  '/devices':
    get:
      tags:
        - Device
      summary: 디바이스 목록 조회
      parameters:
        - $ref: '#/components/parameters/userid'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'Device.model.yaml#/DeviceAttribute'
  '/devices/{id}':
    get:
      tags:
        - Device
      summary: 디바이스 상태 요청
      parameters:
        - $ref: '#/components/parameters/deviceIdParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Device.model.yaml#/DeviceState'
    put:
      tags:
        - Device
      summary: 디바이스 상태 변경
      parameters:
        - $ref: '#/components/parameters/deviceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'Device.model.yaml#/DeviceCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Device.model.yaml#/DeviceState'
  '/devices/{id}/database':
    get:
      tags:
        - Device
      summary: 디바이스 상태 DB 요청
      parameters:
        - $ref: '#/components/parameters/deviceIdParam'
        - $ref: '#/components/parameters/startParam'
        - $ref: '#/components/parameters/endParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: 'Device.model.yaml#/DeviceDbState'
components:
  parameters:
    deviceIdParam:
      name: id
      in: path
      required: true
      description: Device'Id
      schema:
        type: string
    userid:
      name: userId
      in: query
      description: 사용자 ID
      schema:
        type: string
    startParam:
      name: start
      in: query
      description: The start time for the query
      schema:
        type: integer
        format: int64
    endParam:
      name: end
      in: query
      description: The end time for the query
      schema:
        type: integer
        format: int64
    offset:
      name: offset
      in: query
      description: Number of items to skip before returning the results.
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
    limit:
      name: limit
      in: query
      description: Maximum number of items to return.
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 20
  schemas:
    DeviceAttribute:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        name:
          type: string
        nickname:
          type: string
        willReportState:
          type: boolean
        deviceInfo:
          type: object
          properties:
            manufacturer:
              type: string
            model:
              type: string
            hwVersion:
              type: string
            swVersion:
              type: string
        traits:
          type: array
          items:
            type: string
            enum:
              - binarySwitch
              - binarySensor
              - levelSwitch
              - levelSensor
              - modeSwitch
              - temperatureControl
        attributes:
          type: object
          properties:
            anyOf:
              - $ref: 'model_trait_binarysensor.yaml#/BinarySensorAttribues'
              - $ref: 'model_trait_binaryswitch.yaml#/BinarySwitchAttribues'
              - $ref: 'model_trait_levelsensor.yaml#/LevelSensorAttribues'
              - $ref: 'model_trait_levelswitch.yaml#/LevelSwitchAttribues'
              - $ref: 'model_trait_modeswitch.yaml#/ModeSwitchAttribues'
              - $ref: 'model_trait_temperaturecontrol.yaml#/TemperatureControlAttributes'
        customData:
          type: object
    DeviceState:
      type: object
      properties:
        online:
          type: boolean
          anyOf:
            - $ref: 'BinarySensor.trait.yaml#/BinarySensorStates'
            - $ref: 'BinarySwitch.trait.yaml#/BinarySwitchStates'
            - $ref: 'LevelSensor.trait.yaml#/LevelSensorStates'
            - $ref: 'LevelSwitch.trait.yaml#/LevelSwitchStates'
            - $ref: 'ModeSwitch.trait.yaml#/ModeSwitchStates'
            - $ref: 'TemperatureContro.trait.yaml#/TemperatureControlStates'
    DeviceCommand:
      type: object
      properties:
        anyOf:
          - $ref: 'BinarySensor.trait.yaml#/BinarySensorCommands'
          - $ref: 'BinarySwitch.trait.yaml#/BinarySwitchCommands'
          - $ref: 'LevelSensor.trait.yaml#/LevelSensorCommands'
          - $ref: 'LevelSwitch.trait.yaml#/LevelSwitchCommands'
          - $ref: 'ModeSwitch.trait.yaml#/ModeSwitchCommands'
          - $ref: 'TemperatureContro.trait.yaml#/TemperatureControlCommands'
    DeviceDbState:
      type: object
      properties:
        name:
          type: string
          description: Trait에서 정의된 State의 key 이름
        max:
          type: number
        min:
          type: number
        avr:
          type: number
        datas:
          type: array
          items:
            type: array
            items:
              allOf:
                - type: integer
                  format: int64
                - type: number
    BinarySensorAttributes:
      type: object
      properties:
        binarySensors:
          type: array
          items:
            $ref: '#/BinarySensorAttribute'
    BinarySensorStates:
      type: object
      properties:
        binarySensors:
          type: array
          items:
            $ref: '#/BinarySensorState'
    BinarySensorAttribute:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        nickname:
          type: string
    BinarySensorState:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        currentValue:
          type: boolean
